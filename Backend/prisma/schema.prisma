// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int       @id @default(autoincrement())
  email           String    @unique
  password        String
  isVerified      Boolean   @default(false)
  createdAt       DateTime  @default(now())
  verificationToken VerificationToken?

  @@map("users")
}

model VerificationToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  userId    Int      @unique
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])

  @@map("verification_tokens")
}

model Board {
  id        Int      @id @default(autoincrement())
  title     String
  category  String
  author    String?
  createdAt DateTime @default(now())
  cards     Card[]
}

model Card {
  id           Int       @id @default(autoincrement())
  message      String
  gifUrl       String
  textMessage  String?
  author       String?
  upvotes      Int       @default(0)
  isSigned     Boolean   @default(false)
  board        Board     @relation(fields: [boardId], references: [id], onDelete: Cascade)
  boardId      Int
  comments     Comment[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  card      Card     @relation(fields: [cardId], references: [id], onDelete: Cascade)
  cardId    Int
}
